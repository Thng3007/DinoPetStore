
@{
    ViewBag.Title = "Trang Thống Kê";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}



@{ ViewBag.Title = "Trang Thống Kê";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml"; }

<div class="row">

    <div class="col-sm-6">
        <h4 class="text-center text-success">THỐNG KÊ DOANH THU THEO THÁNG NĂM 2022</h4>
        <div class="col-sm-12">
            <canvas id="statisticssale" width="400" height="400"></canvas>
        </div>

    </div>

    <div class="col-sm-6">
        <h4 class="text-center text-warning">THỐNG KÊ SỐ LƯỢNG ĐƠN ĐẶT THEO THÁNG NĂM 2022</h4>
        <div class="col-sm-12">
            <canvas id="countorder" width="400" height="400"></canvas>
        </div>
    </div>
    <div class="col-sm-12">
        <h4 class="text-center text-warning">THỐNG KÊ SỐ TỈ LỆ KHÁCH ĐẶT HÀNG</h4>
        <div class="col-sm-12">
            <canvas id="countcustomer" width="400" height="400"></canvas>
        </div>
    </div>

</div>


<script>
    $(document).ready(function () {
        getStatisticsSaleByMonth();
        CountOrderByMonth();
        CountCustomOrder();
    });

    //Lấy doanh thu theo tháng
    function getStatisticsSaleByMonth() {
        $.ajax({
            type: "GET",
            url: "/ThongKe/StatisticsSaleByMonth",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (typeof (data) === 'object') {
                    var labels = data.map(function (item) {
                        return `Tháng ${item['Month']}`;
                    });
                    var res = data.map(function (item) {
                        return item['TotalAmout'];
                    });
                    drawChart(labels, res, "statisticssale", "Tổng tiền");
                }
            },
            failure: function (response) {
                alert(response)
                DevExpress.ui.notify(response, 3000);
            },
            error: function (response) {
                alert(response)
            }
        })
    }

    //Lấy SL đơn hàng theo tháng
    function CountOrderByMonth() {
        $.ajax({
            type: "GET",
            url: "/ThongKe/CountOrderByMonth",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                if (typeof (data) === 'object') {
                    var labels = data.map(function (item) {
                        return `Tháng ${item['Month']}`;
                    });
                    var res = data.map(function (item) {
                        return item['TotalOrder'];
                    });
                    drawChart(labels, res, "countorder", "Số lượng");
                }
            },
            failure: function (response) {
                alert(response)
                DevExpress.ui.notify(response, 3000);
            },
            error: function (response) {
                alert(response)
            }
        })
    }

    //hàm vẽ chart

    function drawChart(labels, data, id, label) {
        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';
        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }

        // Bar Chart Example
        var ctx = document.getElementById(`${id}`);
        var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels, //["January", "February", "March", "April", "May", "June"],
                datasets: [{
                    label: `${label}: `,
                    backgroundColor: "#4e73df",
                    hoverBackgroundColor: "#2e59d9",
                    borderColor: "#4e73df",
                    data: data,
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'month'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 6
                        },
                        maxBarThickness: 25,
                    }],
                    yAxes: [{
                        ticks: {
                            min: 0,
                            maxTicksLimit: 5,
                            padding: 10,
                            callback: function (value, index, values) {
                                return number_format(value);
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + number_format(tooltipItem.yLabel);
                        }
                    }
                },
            }
        });

    }

    function CountCustomOrder() {
        $.ajax({
            type: "GET",
            url: "/ThongKe/CountCustomOrder",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                if (typeof (data) === 'object') {
                    var labels = data.map(function (item) {
                        return `${item['Name']}`;
                    });
                    var res = data.map(function (item) {
                        return item['Ratio'];
                    });
                    drawChartPie(labels, res, "countcustomer");
                }
            },
            failure: function (response) {
                alert(response)
                DevExpress.ui.notify(response, 3000);
            },
            error: function (response) {
                alert(response)
            }
        })
    }

    function drawChartPie(labels, data, id) {
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';

        // Pie Chart Example
        var ctx = document.getElementById(`${id}`);
        var myPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],
                    hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],
                    hoverBorderColor: "rgba(234, 236, 244, 1)",
                }],
            },
            options: {
                maintainAspectRatio: false,
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                },
                legend: {
                    display: false
                },
                cutoutPercentage: 80,
            },
        });

    }

</script>






@*<h1 style="padding-top:20px; padding-left:20px; color:darkslategrey; color: brown;">THỐNG KÊ</h1>

    <table class="table">
        <tr>
            <td>
                <h2 style="text-align:center"><img src="~/img/icons/cash_50px.png" />TỔNG DOANH THU</h2>
                @{Decimal TongDoanhThu = decimal.Parse(ViewBag.TongDoanhThu.ToString()); }
                <h3 style="text-align:center">@TongDoanhThu.ToString("#,##") VNĐ</h3>
            </td>
        </tr>
        <tr style="text-align:center">
            <td>
                <h2 style="text-align:center"><img src="~/img/icons/ico_DonHang.png" />TỔNG ĐƠN HÀNG ĐẶT</h2>
                <h3 style="text-align:center">@ViewBag.TongDonHang</h3>
            </td>
        </tr>
        <tr style="text-align:center">
            <td>
                <h2 style="text-align:center"><img src="~/img/icons/food_truck_50px.png" />TỔNG SẢN PHẨM</h2>
                <h3 style="text-align:center">@ViewBag.TongSanPham</h3>
            </td>
        </tr>
        <tr style="text-align:center">
            <td>

                <h2 style="text-align:center"><img src="~/img/logo/admin2.png" /> QUẢN TRỊ VIÊN</h2>
                <h3 style="text-align:center">@ViewBag.TongAdmin</h3>
            </td>
        </tr>
        <tr style="text-align:center">
            <td>
                <h2 style="text-align:center"><img src="~/img/icons/ico_KhachHang.png" />TỔNG TÀI KHOẢN KHÁCH HÀNG</h2>
                <h3 style="text-align:center">@ViewBag.TongKhachHang</h3>
            </td>
        </tr>
    </table>*@

